<existing test file contents>describe('onSearch', () => { it('should trigger onSearch when input changes', async () => { const wrapper = mount(EditDataElement); const input = wrapper.find('input'); await input.setValue('test search'); expect(wrapper.emitted('onSearch')).toBeTruthy(); expect(wrapper.emitted('onSearch')?.[0]).toEqual(['test search']); }); });

describe('onSuggestionSelected', () => { it('should trigger onSuggestionSelected when a suggestion is clicked', async () => { const wrapper = mount(EditDataElement, { data() { return { suggestions: ['Suggestion 1', 'Suggestion 2'] }; } }); const suggestion = wrapper.find('.suggestion-item'); await suggestion.trigger('click'); expect(wrapper.emitted('onSuggestionSelected')).toBeTruthy(); expect(wrapper.emitted('onSuggestionSelected')?.[0]).toEqual(['Suggestion 1']); }); });

